{"version":3,"sources":["ConfirmedMessage.js","App.js","reportWebVitals.js","index.js"],"names":["ConfirmMessageContainer","styled","div","ConfirmMessageDiv","ConfirmMessage","p","ConfirmMessageIconDiv","ReplyMessageContainer","ReplyMessage","input","ReplyHr","hr","ConfirmedMessage","props","useState","replyMessage","setReplyMessage","confirmedReplyMessage","setConfirmedReplyMessage","style","display","alignItems","confirmedMessage","icon","faTimes","cursor","onClick","deleteMessageHandler","color","placeholder","onChange","event","messageId","target","value","faPlay","size","BoardContainer","MessageTextarea","textarea","ButtonContainer","Button","button","MessageContainer","Hr","NoMessage","App","message","setMessage","confirmMessage","setConfirmMessage","onSubmit","preventDefault","console","log","prevStat","newArr","push","rows","type","map","index","filter","msg","i","deleteConfirmedMessageHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9bbb91a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faPlay } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ConfirmMessageContainer = styled.div`\n  box-sizing: border-box;\n  background-color: #dddddd;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 2rem;\n`;\n\nconst ConfirmMessageDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ConfirmMessage = styled.p`\n  width: 80%;\n  font-size: 24px;\n  color: #4a4a4a;\n  margin: 0;\n`;\n\nconst ConfirmMessageIconDiv = styled.div`\n  width: 20%;\n  height: 6vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nconst ReplyMessageContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 1rem;\n`;\n\nconst ReplyMessage = styled.input`\n  width: 95%;\n  border-radius: 8px;\n  font-size: 24px;\n  border: 0.5px solid #dddddd;\n`;\n\nconst ReplyHr = styled.hr`\n  background-color: #ffffff;\n  border: none;\n`;\n\nconst ConfirmedMessage = (props) => {\n  const [replyMessage, setReplyMessage] = useState();\n  const [confirmedReplyMessage, setConfirmedReplyMessage] = useState(\"\");\n  // const deleteMessageHandler = (messageId) => {\n  //   setConfirmMessage((prevStat) => {\n  //     const newArr = prevStat.filter((msg) => {\n  //       return messageId !== msg.id;\n  //     });\n  //     return newArr;\n  //   });\n  // };\n\n  const replyChangeHandler = (event, messageId) => {\n    setReplyMessage(event.target.value);\n  };\n\n  const replySubmitHandler = () => {\n    setConfirmedReplyMessage(replyMessage);\n  };\n  return (\n    <ConfirmMessageContainer>\n      <ConfirmMessageDiv>\n        <div style={{ display: \"flex\", alignItems: \"flex-start\" }}>\n          <ConfirmMessage>{props.confirmedMessage}</ConfirmMessage>\n        </div>\n        <ConfirmMessageIconDiv>\n          <FontAwesomeIcon icon={faTimes} style={{ cursor: \"pointer\" }} onClick={props.deleteMessageHandler} />\n          <span style={{ color: \"white\" }}>回覆</span>\n        </ConfirmMessageIconDiv>\n      </ConfirmMessageDiv>\n      {!confirmedReplyMessage && (\n        <ReplyMessageContainer>\n          <ReplyMessage\n            placeholder=\"請輸入留言...\"\n            onChange={replyChangeHandler}\n            value={replyMessage}\n          ></ReplyMessage>\n          <FontAwesomeIcon icon={faPlay} onClick={replySubmitHandler} style={{cursor: \"pointer\"}} />\n        </ReplyMessageContainer>\n      )}\n      {confirmedReplyMessage && (\n        <>\n          <ReplyHr size=\"5\" />\n          <div style={{ display: \"flex\", alignItems: \"flex-start\" }}>\n            <ConfirmMessage>{confirmedReplyMessage}</ConfirmMessage>\n          </div>\n        </>\n      )}\n    </ConfirmMessageContainer>\n  );\n};\n\nexport default ConfirmedMessage;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ConfirmedMessage from \"./ConfirmedMessage\";\nimport \"./App.css\";\n\nconst BoardContainer = styled.div`\n  width: 100vw;\n  padding: 8px;\n  border: 1px solid #4a4a4a;\n  @media (min-width: 768px) {\n    width: 60vw;\n    padding: 16px;\n  }\n`;\n\nconst MessageTextarea = styled.textarea`\n  width: 100%;\n  border: 2px solid #dddddd;\n  border-radius: 8px;\n  font-size: 24px;\n  box-sizing: border-box;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 0.5rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst Button = styled.button`\n  background-color: #4a4a4a;\n  color: white;\n  border-radius: 5px;\n  width: 10rem;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\nconst MessageContainer = styled.div``;\n\nconst Hr = styled.hr`\n  background-color: #4a4a4a;\n`;\n\nconst NoMessage = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: #4a4a4a;\n  font-weight: 700;\n`;\n\nconst App = () => {\n  const [message, setMessage] = useState(\"\");\n  const [confirmMessage, setConfirmMessage] = useState([]);\n\n  const inputHandler = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const leaveMessageHandler = (event) => {\n    event.preventDefault();\n    console.log(confirmMessage);\n    setConfirmMessage((prevStat) => {\n      const newArr = [...prevStat];\n      newArr.push(message);\n      return newArr;\n    });\n    setMessage(\"\");\n  };\n\n  const deleteConfirmedMessageHandler = (index) => {\n    setConfirmMessage((prevStat) => {\n      const newArr = prevStat.filter((msg, i) => i !== index);\n      return newArr;\n    });\n  };\n\n  return (\n    <BoardContainer>\n      <form onSubmit={leaveMessageHandler}>\n        <MessageTextarea\n          rows=\"5\"\n          placeholder=\"請輸入留言...\"\n          value={message}\n          onChange={inputHandler}\n        ></MessageTextarea>\n        <ButtonContainer>\n          <Button type=\"submit\">留言</Button>\n        </ButtonContainer>\n        {!confirmMessage[0] && (\n          <MessageContainer>\n            <Hr size=\"5\" />\n            <NoMessage>目前沒有訊息</NoMessage>\n          </MessageContainer>\n        )}\n        {confirmMessage &&\n          confirmMessage.map((message, index) => {\n            return (\n              <ConfirmedMessage\n                key={index}\n                confirmedMessage={message}\n                deleteMessageHandler={() => deleteConfirmedMessageHandler(index)}\n              />\n            );\n          })}\n      </form>\n    </BoardContainer>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}